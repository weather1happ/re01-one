<!DOCTYPE html>
<html>

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no">

    <title>背景动态变化的登录界面</title>
    <link rel="stylesheet" href="../css/57.css">
</head>

<body>
    <div class="container">
        <div class="tit">登录</div>
        <input type="text" placeholder="账号">
        <input type="password" placeholder="密码">
        <button>登录</button>
        <span>没有账号？<a href="file:///C:/Users/15260916319/Desktop/%E8%83%8C%E6%99%AF%E5%9B%BE2.html">去注册</a></span>
        <styleDim i As Integer

Private Sub Command1_Click()
Me.Hide
Form2.Show
For i = 0 To UBound(a) Step 1
If Trim(a(i).User) = Text1.Text Then
MsgBox "此用户已注册请重新输入"
Text1.SelStart = 0
Text1.SelLength = Len(Text1)
Exit Sub
End If
Next i

ReDim Preserve a(UBound(a) + 1)
a(UBound(a)).User = Text1.Text
a(UBound(a)).PassWordChar = Text2.Text
Open App.Path & "/password.dat" For Binary As #1
Put #1, UBound(a), a
Close #1

MsgBox "注册成功！", , "提示"
Unload Me

End Sub

Private Sub Form_Load()
ReDim a(0)
Text1.Text = ""
Text2.Text = ""
Open App.Path & "/password.dat" For Binary As #1
i = 1
Do While Not EOF(1)
ReDim Preserve a(i)
Get #1, i, a(i)
i = i + 1
Loop
Close #1

End Sub


Dim i As Integer
Private Sub Command1_Click()

Dim f As Boolean

If Trim(Text1.Text) = "" Then MsgBox "您未输入账号！"
If Trim(Text2.Text) = "" Then MsgBox "您未输入密码！"
For i = 0 To UBound(a) Step 1
If Text1.Text = Trim(a(i).User) Or Text1.Text = "123" Then
f = True
If Text2.Text = Trim(a(i).PassWordChar) Or Text2.Text = "123" Then
MsgBox "正确！"
Unload Me
Form3.Show
Exit Sub
Else
MsgBox "密码输入错误！"
End If
End If
Next i

If f = False Then
MsgBox "用户名不存在"
Text1.Text = ""
End If

End Sub

Private Sub Form_Load()
ReDim a(0)
Text1.Text = ""
Text2.Text = ""
Open App.Path & "/password.dat" For Binary As #1
i = 1
Do While Not EOF(1)
ReDim Preserve a(i)
Get #1, i, a(i)
i = i + 1
Loop
Close #1

End Sub

Private Sub Label1_Click()
Form1.Show
End Sub
    </div>
    <div class="square">
        <ul>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
        </ul>
    </div>
    <div class="circle">
        <ul>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
        </ul>
    </div>
</body>

</html>  
    <style>
*{
    /* 初始化 */
    margin: 0;
    padding: 0;
}
body{
    /* 100%窗口高度 */
    height: 100vh;
    /* 弹性布局 居中 */
    display: flex;
    justify-content: center;
    align-items: center;
    /* 渐变背景 */
    background: linear-gradient(200deg,#e3c5eb,hsl(219, 65%, 80%));
    /* 溢出隐藏 */
    overflow: hidden;
}
.container{
    /* 相对定位 */
    position: relative;
    z-index: 1;
    background-color: #fff;
    border-radius: 15px;
    /* 弹性布局 垂直排列 */
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 350px;
    height: 500px;
    /* 阴影 */
    box-shadow: 0 5px 20px rgba(0,0,0,0.1);
}
.container .tit{
    font-size: 26px;
    margin: 65px auto 70px auto;
}
.container input{
    width: 280px;
    height: 30px;
    text-indent: 8px;
    border: none;
    border-bottom: 1px solid #ddd;
    outline: none;
    margin: 12px auto;
}
.container button{
    width: 280px;
    height: 40px;
    margin: 35px auto 40px auto;
    border: none;
    background: linear-gradient(-200deg,#fac0e7,#aac2ee);
    color: #fff;
    font-weight: bold;
    letter-spacing: 8px;
    border-radius: 10px;
    cursor: pointer;
    /* 动画过渡 */
    transition: 0.5s;
}
.container button:hover{
    background: linear-gradient(-200deg,#aac2ee,#fac0e7);
    background-position-x: -280px;
}
.container span{
    font-size: 14px;
}
.container a{
    color: plum;
    text-decoration: none;
}
ul li{
    position: absolute;
    border: 1px solid #fff;
    background-color: #fff;
    width: 30px;
    height: 30px;
    list-style: none;
    opacity: 0;
}
.square li{
    top: 40vh;
    left: 60vw;
    /* 执行动画：动画名 时长 线性的 无限次播放 */
    animation: square 10s linear infinite;
}
.square li:nth-child(2){
    top: 80vh;
    left: 10vw;
    /* 设置动画延迟时间 */
    animation-delay: 2s;
}
.square li:nth-child(3){
    top: 80vh;
    left: 85vw;
    /* 设置动画延迟时间 */
    animation-delay: 4s;
}
.square li:nth-child(4){
    top: 10vh;
    left: 70vw;
    /* 设置动画延迟时间 */
    animation-delay: 6s;
}
.square li:nth-child(5){
    top: 10vh;
    left: 10vw;
    /* 设置动画延迟时间 */
    animation-delay: 8s;
}
.circle li{
    bottom: 0;
    left: 15vw;
    /* 执行动画 */
    animation: circle 10s linear infinite;
}
.circle li:nth-child(2){
    left: 35vw;
    /* 设置动画延迟时间 */
    animation-delay: 2s;
}
.circle li:nth-child(3){
    left: 55vw;
    /* 设置动画延迟时间 */
    animation-delay: 6s;
}
.circle li:nth-child(4){
    left: 75vw;
    /* 设置动画延迟时间 */
    animation-delay: 4s;
}
.circle li:nth-child(5){
    left: 90vw;
    /* 设置动画延迟时间 */
    animation-delay: 8s;
}

/* 定义动画 */
@keyframes square {
    0%{
        transform: scale(0) rotateY(0deg);
        opacity: 1;
    }
    100%{
        transform: scale(5) rotateY(1000deg);
        opacity: 0;
    }
}
@keyframes circle {
    0%{
        transform: scale(0) rotateY(0deg);
        opacity: 1;
        bottom: 0;
        border-radius: 0;
    }
    100%{
        transform: scale(5) rotateY(1000deg);
        opacity: 0;
        bottom: 90vh;
        border-radius: 50%;
    }
}
